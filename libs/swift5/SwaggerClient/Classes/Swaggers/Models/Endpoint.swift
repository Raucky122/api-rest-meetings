//
// Endpoint.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Endpoint: Codable {

    public var ecMode: String?
    public var creationtime: String?
    public var audioRemoteRtcpAddress: String?
    public var videoSendCodec: String?
    public var audioPlayID: String?
    public var callQualityRecv: String?
    public var sessionOut: String?
    public var audioLocalAddress: String?
    public var meetingid: String?
    public var videoSendWidth: String?
    public var callQualitySend: String?
    public var mhaddress: String?
    public var rDCControlleeCapable: String?
    public var audioCapName: String?
    public var proxyInfo: String?
    public var audioSendCodec: String?
    public var vendor: String?
    public var videoRecvWidth: String?
    public var conaddress: String?
    public var talkDetected: String?
    public var subLayout: String?
    public var audioRtcpRelay: String?
    public var audioRecvLocalMute: String?
    public var name: String?
    public var videoLocalAddress: String?
    public var audioLocalRtcpAddress: String?
    public var contentRtpRelay: String?
    public var contentLocalRtcpAddress: String?
    public var remoteConnectionCount: String?
    public var callrate: String?
    public var mixerGuid: String?
    public var transport: String?
    public var audioCapSelectID: String?
    public var countryCode: String?
    public var rDCControllerCapable: String?
    public var pairedname: String?
    public var videoRtcpRelay: String?
    public var endpointCpuParams: String?
    public var videoRemoteAddress: String?
    public var version: String?
    public var contentRecv: String?
    public var localName: String?
    public var bJNUserId: String?
    public var contentRemoteAddress: String?
    public var audioSend: String?
    public var participantDTMFMenus: String?
    public var videoRtcpTranspor: String?
    public var audioRtcpTransport: String?
    public var relayNodeId: String?
    public var contentRemoteRtcpAddress: String?
    public var audioRtpRelay: String?
    public var videoRtpTransport: String?
    public var contentRecvLocalMute: String?
    public var layout: String?
    public var contentSend: String?
    public var remoteaddress: String?
    public var meetingGuid: String?
    public var connecttime: String?
    public var localaddress: String?
    public var audioRemoteAddress: String?
    public var bondedAudioGuid: String?
    public var audioRecvRemoteMute: String?
    public var sessionOutRelay: String?
    public var leader: String?
    public var contentLocalAddress: String?
    public var movieCapable: String?
    public var videoRecvLocalMute: String?
    public var contentRtpTransport: String?
    public var rDCVersion: String?
    public var audioRecv: String?
    public var contentRelayServer: String?
    public var videoRecv: String?
    public var visibility: String?
    public var sessionid: String?
    public var contentRtcpRelay: String?
    public var locales: String?
    public var medaddress: String?
    public var htmlLayoutGuid: String?
    public var endpoint: String?
    public var videoDrop: String?
    public var contentRtcpTransport: String?
    public var videoRemoteRtcpAddress: String?
    public var videoRtpRelay: String?
    public var mixaddress: String?
    public var sIPHTTPProxyTransport: String?
    public var videoRecvCodec: String?
    public var audioRecvCodec: String?
    public var sessionIn: String?
    public var bondedVideoGuid: String?
    public var callQuality: String?
    public var meetingjointime: String?
    public var sessionInRelay: String?
    public var pairedremoteaddress: String?
    public var videoSendHeight: String?
    public var videoRecvHeight: String?
    public var secureCall: String?
    public var videoLocalRtcpAddress: String?
    public var audioPlayName: String?
    public var videoCapID: String?
    public var audioRtpTransport: String?
    public var meetingInfoMode: String?
    public var callhostname: String?
    public var callguid: String?
    public var audioCapID: String?
    public var videoSend: String?
    public var contentRecvCodec: String?
    public var sessionRelay: String?
    public var videoRecvRemoteMute: String?
    public var _id: String?
    public var bondedVideoName: String?
    public var isInRoster: Bool?

    public init(ecMode: String?, creationtime: String?, audioRemoteRtcpAddress: String?, videoSendCodec: String?, audioPlayID: String?, callQualityRecv: String?, sessionOut: String?, audioLocalAddress: String?, meetingid: String?, videoSendWidth: String?, callQualitySend: String?, mhaddress: String?, rDCControlleeCapable: String?, audioCapName: String?, proxyInfo: String?, audioSendCodec: String?, vendor: String?, videoRecvWidth: String?, conaddress: String?, talkDetected: String?, subLayout: String?, audioRtcpRelay: String?, audioRecvLocalMute: String?, name: String?, videoLocalAddress: String?, audioLocalRtcpAddress: String?, contentRtpRelay: String?, contentLocalRtcpAddress: String?, remoteConnectionCount: String?, callrate: String?, mixerGuid: String?, transport: String?, audioCapSelectID: String?, countryCode: String?, rDCControllerCapable: String?, pairedname: String?, videoRtcpRelay: String?, endpointCpuParams: String?, videoRemoteAddress: String?, version: String?, contentRecv: String?, localName: String?, bJNUserId: String?, contentRemoteAddress: String?, audioSend: String?, participantDTMFMenus: String?, videoRtcpTranspor: String?, audioRtcpTransport: String?, relayNodeId: String?, contentRemoteRtcpAddress: String?, audioRtpRelay: String?, videoRtpTransport: String?, contentRecvLocalMute: String?, layout: String?, contentSend: String?, remoteaddress: String?, meetingGuid: String?, connecttime: String?, localaddress: String?, audioRemoteAddress: String?, bondedAudioGuid: String?, audioRecvRemoteMute: String?, sessionOutRelay: String?, leader: String?, contentLocalAddress: String?, movieCapable: String?, videoRecvLocalMute: String?, contentRtpTransport: String?, rDCVersion: String?, audioRecv: String?, contentRelayServer: String?, videoRecv: String?, visibility: String?, sessionid: String?, contentRtcpRelay: String?, locales: String?, medaddress: String?, htmlLayoutGuid: String?, endpoint: String?, videoDrop: String?, contentRtcpTransport: String?, videoRemoteRtcpAddress: String?, videoRtpRelay: String?, mixaddress: String?, sIPHTTPProxyTransport: String?, videoRecvCodec: String?, audioRecvCodec: String?, sessionIn: String?, bondedVideoGuid: String?, callQuality: String?, meetingjointime: String?, sessionInRelay: String?, pairedremoteaddress: String?, videoSendHeight: String?, videoRecvHeight: String?, secureCall: String?, videoLocalRtcpAddress: String?, audioPlayName: String?, videoCapID: String?, audioRtpTransport: String?, meetingInfoMode: String?, callhostname: String?, callguid: String?, audioCapID: String?, videoSend: String?, contentRecvCodec: String?, sessionRelay: String?, videoRecvRemoteMute: String?, _id: String?, bondedVideoName: String?, isInRoster: Bool?) {
        self.ecMode = ecMode
        self.creationtime = creationtime
        self.audioRemoteRtcpAddress = audioRemoteRtcpAddress
        self.videoSendCodec = videoSendCodec
        self.audioPlayID = audioPlayID
        self.callQualityRecv = callQualityRecv
        self.sessionOut = sessionOut
        self.audioLocalAddress = audioLocalAddress
        self.meetingid = meetingid
        self.videoSendWidth = videoSendWidth
        self.callQualitySend = callQualitySend
        self.mhaddress = mhaddress
        self.rDCControlleeCapable = rDCControlleeCapable
        self.audioCapName = audioCapName
        self.proxyInfo = proxyInfo
        self.audioSendCodec = audioSendCodec
        self.vendor = vendor
        self.videoRecvWidth = videoRecvWidth
        self.conaddress = conaddress
        self.talkDetected = talkDetected
        self.subLayout = subLayout
        self.audioRtcpRelay = audioRtcpRelay
        self.audioRecvLocalMute = audioRecvLocalMute
        self.name = name
        self.videoLocalAddress = videoLocalAddress
        self.audioLocalRtcpAddress = audioLocalRtcpAddress
        self.contentRtpRelay = contentRtpRelay
        self.contentLocalRtcpAddress = contentLocalRtcpAddress
        self.remoteConnectionCount = remoteConnectionCount
        self.callrate = callrate
        self.mixerGuid = mixerGuid
        self.transport = transport
        self.audioCapSelectID = audioCapSelectID
        self.countryCode = countryCode
        self.rDCControllerCapable = rDCControllerCapable
        self.pairedname = pairedname
        self.videoRtcpRelay = videoRtcpRelay
        self.endpointCpuParams = endpointCpuParams
        self.videoRemoteAddress = videoRemoteAddress
        self.version = version
        self.contentRecv = contentRecv
        self.localName = localName
        self.bJNUserId = bJNUserId
        self.contentRemoteAddress = contentRemoteAddress
        self.audioSend = audioSend
        self.participantDTMFMenus = participantDTMFMenus
        self.videoRtcpTranspor = videoRtcpTranspor
        self.audioRtcpTransport = audioRtcpTransport
        self.relayNodeId = relayNodeId
        self.contentRemoteRtcpAddress = contentRemoteRtcpAddress
        self.audioRtpRelay = audioRtpRelay
        self.videoRtpTransport = videoRtpTransport
        self.contentRecvLocalMute = contentRecvLocalMute
        self.layout = layout
        self.contentSend = contentSend
        self.remoteaddress = remoteaddress
        self.meetingGuid = meetingGuid
        self.connecttime = connecttime
        self.localaddress = localaddress
        self.audioRemoteAddress = audioRemoteAddress
        self.bondedAudioGuid = bondedAudioGuid
        self.audioRecvRemoteMute = audioRecvRemoteMute
        self.sessionOutRelay = sessionOutRelay
        self.leader = leader
        self.contentLocalAddress = contentLocalAddress
        self.movieCapable = movieCapable
        self.videoRecvLocalMute = videoRecvLocalMute
        self.contentRtpTransport = contentRtpTransport
        self.rDCVersion = rDCVersion
        self.audioRecv = audioRecv
        self.contentRelayServer = contentRelayServer
        self.videoRecv = videoRecv
        self.visibility = visibility
        self.sessionid = sessionid
        self.contentRtcpRelay = contentRtcpRelay
        self.locales = locales
        self.medaddress = medaddress
        self.htmlLayoutGuid = htmlLayoutGuid
        self.endpoint = endpoint
        self.videoDrop = videoDrop
        self.contentRtcpTransport = contentRtcpTransport
        self.videoRemoteRtcpAddress = videoRemoteRtcpAddress
        self.videoRtpRelay = videoRtpRelay
        self.mixaddress = mixaddress
        self.sIPHTTPProxyTransport = sIPHTTPProxyTransport
        self.videoRecvCodec = videoRecvCodec
        self.audioRecvCodec = audioRecvCodec
        self.sessionIn = sessionIn
        self.bondedVideoGuid = bondedVideoGuid
        self.callQuality = callQuality
        self.meetingjointime = meetingjointime
        self.sessionInRelay = sessionInRelay
        self.pairedremoteaddress = pairedremoteaddress
        self.videoSendHeight = videoSendHeight
        self.videoRecvHeight = videoRecvHeight
        self.secureCall = secureCall
        self.videoLocalRtcpAddress = videoLocalRtcpAddress
        self.audioPlayName = audioPlayName
        self.videoCapID = videoCapID
        self.audioRtpTransport = audioRtpTransport
        self.meetingInfoMode = meetingInfoMode
        self.callhostname = callhostname
        self.callguid = callguid
        self.audioCapID = audioCapID
        self.videoSend = videoSend
        self.contentRecvCodec = contentRecvCodec
        self.sessionRelay = sessionRelay
        self.videoRecvRemoteMute = videoRecvRemoteMute
        self._id = _id
        self.bondedVideoName = bondedVideoName
        self.isInRoster = isInRoster
    }

    public enum CodingKeys: String, CodingKey { 
        case ecMode = "EcMode"
        case creationtime
        case audioRemoteRtcpAddress = "audio.remote.rtcpAddress"
        case videoSendCodec = "VideoSendCodec"
        case audioPlayID = "AudioPlayID"
        case callQualityRecv = "CallQualityRecv"
        case sessionOut = "SessionOut"
        case audioLocalAddress = "audio.local.address"
        case meetingid
        case videoSendWidth = "VideoSendWidth"
        case callQualitySend = "CallQualitySend"
        case mhaddress
        case rDCControlleeCapable = "RDCControlleeCapable"
        case audioCapName = "AudioCapName"
        case proxyInfo = "ProxyInfo"
        case audioSendCodec = "AudioSendCodec"
        case vendor
        case videoRecvWidth = "VideoRecvWidth"
        case conaddress
        case talkDetected = "TalkDetected"
        case subLayout = "SubLayout"
        case audioRtcpRelay = "AudioRtcpRelay"
        case audioRecvLocalMute = "AudioRecvLocalMute"
        case name
        case videoLocalAddress = "video.local.address"
        case audioLocalRtcpAddress = "audio.local.rtcpAddress"
        case contentRtpRelay = "ContentRtpRelay"
        case contentLocalRtcpAddress = "content.local.rtcpAddress"
        case remoteConnectionCount = "RemoteConnectionCount"
        case callrate
        case mixerGuid = "MixerGuid"
        case transport
        case audioCapSelectID = "AudioCapSelectID"
        case countryCode = "CountryCode"
        case rDCControllerCapable = "RDCControllerCapable"
        case pairedname
        case videoRtcpRelay = "VideoRtcpRelay"
        case endpointCpuParams = "EndpointCpuParams"
        case videoRemoteAddress = "video.remote.address"
        case version
        case contentRecv = "ContentRecv"
        case localName
        case bJNUserId = "BJNUserId"
        case contentRemoteAddress = "content.remote.address"
        case audioSend = "AudioSend"
        case participantDTMFMenus = "ParticipantDTMFMenus"
        case videoRtcpTranspor = "VideoRtcpTranspor"
        case audioRtcpTransport = "AudioRtcpTransport"
        case relayNodeId = "RelayNodeId"
        case contentRemoteRtcpAddress = "content.remote.rtcpAddress"
        case audioRtpRelay = "AudioRtpRelay"
        case videoRtpTransport = "VideoRtpTransport"
        case contentRecvLocalMute = "ContentRecvLocalMute"
        case layout = "Layout"
        case contentSend = "ContentSend"
        case remoteaddress
        case meetingGuid = "MeetingGuid"
        case connecttime
        case localaddress
        case audioRemoteAddress = "audio.remote.address"
        case bondedAudioGuid = "BondedAudioGuid"
        case audioRecvRemoteMute = "AudioRecvRemoteMute"
        case sessionOutRelay = "SessionOutRelay"
        case leader = "Leader"
        case contentLocalAddress = "content.local.address"
        case movieCapable = "MovieCapable"
        case videoRecvLocalMute = "VideoRecvLocalMute"
        case contentRtpTransport = "ContentRtpTransport"
        case rDCVersion = "RDCVersion"
        case audioRecv = "AudioRecv"
        case contentRelayServer = "ContentRelayServer"
        case videoRecv = "VideoRecv"
        case visibility
        case sessionid
        case contentRtcpRelay = "ContentRtcpRelay"
        case locales
        case medaddress
        case htmlLayoutGuid = "HtmlLayoutGuid"
        case endpoint
        case videoDrop = "VideoDrop"
        case contentRtcpTransport = "ContentRtcpTransport"
        case videoRemoteRtcpAddress = "video.remote.rtcpAddress"
        case videoRtpRelay = "VideoRtpRelay"
        case mixaddress
        case sIPHTTPProxyTransport = "SIPHTTPProxyTransport"
        case videoRecvCodec = "VideoRecvCodec"
        case audioRecvCodec = "AudioRecvCodec"
        case sessionIn = "SessionIn"
        case bondedVideoGuid = "BondedVideoGuid"
        case callQuality = "CallQuality"
        case meetingjointime
        case sessionInRelay = "SessionInRelay"
        case pairedremoteaddress
        case videoSendHeight = "VideoSendHeight"
        case videoRecvHeight = "VideoRecvHeight"
        case secureCall = "SecureCall"
        case videoLocalRtcpAddress = "video.local.rtcpAddress"
        case audioPlayName = "AudioPlayName"
        case videoCapID = "VideoCapID"
        case audioRtpTransport = "AudioRtpTransport"
        case meetingInfoMode = "MeetingInfoMode"
        case callhostname
        case callguid
        case audioCapID = "AudioCapID"
        case videoSend = "VideoSend"
        case contentRecvCodec = "ContentRecvCodec"
        case sessionRelay = "SessionRelay"
        case videoRecvRemoteMute = "VideoRecvRemoteMute"
        case _id = "Id"
        case bondedVideoName = "BondedVideoName"
        case isInRoster
    }


}

