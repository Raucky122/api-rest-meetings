//
// MeetingSharing.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct MeetingSharing: Codable {

    public enum Status: String, Codable { 
        case active = "ACTIVE"
        case deleted = "DELETED"
    }
    /** This field is the Sharing Authorization unique identifier. */
    public var _id: Int?
    /** The meetingGuid is a globally unique Id for this particular recording. It is a string which contains the numeric meeting id, followed by a colon, followed by a 128-bit integer number formatted as 6 alphanumeric segments separated by dashes. */
    public var meetingGuid: String?
    /** The ownerId field is the unique Id number of the BlueJeans account that owns the recording */
    public var ownerId: Int?
    public var sharingUrl: String?
    public var recepientType: RecepientOptionsComp?
    public var properties: MeetingSharingProperties?
    /** This status field indicates the state of the sharing authorization record. */
    public var status: Status?
    /** The downloadable field indicates whether the recording can be downloaded */
    public var downloadable: Bool?
    /** TBD */
    public var passcode: String?
    /** TBD */
    public var validity: String?
    /** Date, since epoch time, that the recording was created (in milliseconds). */
    public var created: Int64?
    /** Date, since epoch time, that the recording was last modified (in milliseconds). */
    public var lastmodified: Int64?

    public init(_id: Int?, meetingGuid: String?, ownerId: Int?, sharingUrl: String?, recepientType: RecepientOptionsComp?, properties: MeetingSharingProperties?, status: Status?, downloadable: Bool?, passcode: String?, validity: String?, created: Int64?, lastmodified: Int64?) {
        self._id = _id
        self.meetingGuid = meetingGuid
        self.ownerId = ownerId
        self.sharingUrl = sharingUrl
        self.recepientType = recepientType
        self.properties = properties
        self.status = status
        self.downloadable = downloadable
        self.passcode = passcode
        self.validity = validity
        self.created = created
        self.lastmodified = lastmodified
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case meetingGuid
        case ownerId
        case sharingUrl
        case recepientType
        case properties
        case status
        case downloadable
        case passcode
        case validity
        case created
        case lastmodified
    }


}

