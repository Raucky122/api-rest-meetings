//
// RecordingHistory.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct RecordingHistory: Codable {

    public enum CompositeContentStatus: String, Codable { 
        case processed = "PROCESSED"
    }
    public var chapterId: String?
    public var _id: Int?
    public var startTimeOffset: Int?
    public var endTimeOffset: Int?
    public var chapterName: String?
    public var totalSize: Int?
    public var compositeContentId: Int?
    public var compositeContentStatus: CompositeContentStatus?
    public var parentRecordingId: Int?
    public var viewCount: Int?
    public var recordingSessions: [RecordingSession]?

    public init(chapterId: String?, _id: Int?, startTimeOffset: Int?, endTimeOffset: Int?, chapterName: String?, totalSize: Int?, compositeContentId: Int?, compositeContentStatus: CompositeContentStatus?, parentRecordingId: Int?, viewCount: Int?, recordingSessions: [RecordingSession]?) {
        self.chapterId = chapterId
        self._id = _id
        self.startTimeOffset = startTimeOffset
        self.endTimeOffset = endTimeOffset
        self.chapterName = chapterName
        self.totalSize = totalSize
        self.compositeContentId = compositeContentId
        self.compositeContentStatus = compositeContentStatus
        self.parentRecordingId = parentRecordingId
        self.viewCount = viewCount
        self.recordingSessions = recordingSessions
    }

    public enum CodingKeys: String, CodingKey { 
        case chapterId
        case _id = "id"
        case startTimeOffset
        case endTimeOffset
        case chapterName
        case totalSize
        case compositeContentId
        case compositeContentStatus
        case parentRecordingId
        case viewCount
        case recordingSessions
    }


}

