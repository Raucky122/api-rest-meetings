//
// ApplicationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ApplicationAPI {
    /**
     Create Client Application
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter application: (body) The information about the new client application. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createClientApplication(userId: Int, application: Application, completion: @escaping ((_ data: Application?,_ error: Error?) -> Void)) {
        createClientApplicationWithRequestBuilder(userId: userId, application: application).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create Client Application
     - POST /v1/user/{user_id}/developer_applications
     - This endpoint creates a client application for use in 3-legged OAuth2 authorization.
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "clientId" : "clientId",
  "appName" : "appName",
  "description" : "description",
  "appLogoUrl" : "appLogoUrl",
  "clientSecret" : "clientSecret",
  "redirectUrls" : [ "redirectUrls", "redirectUrls" ]
}}]
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter application: (body) The information about the new client application. 

     - returns: RequestBuilder<Application> 
     */
    open class func createClientApplicationWithRequestBuilder(userId: Int, application: Application) -> RequestBuilder<Application> {
        var path = "/v1/user/{user_id}/developer_applications"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: application)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
        ])

        let requestBuilder: RequestBuilder<Application>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     List Client Applications
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listClientApplications(userId: Int, completion: @escaping ((_ data: ApplicationList?,_ error: Error?) -> Void)) {
        listClientApplicationsWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List Client Applications
     - GET /v1/user/{user_id}/developer_applications
     - This endpoint lists all the client applications associated with the access_token.
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 

     - returns: RequestBuilder<ApplicationList> 
     */
    open class func listClientApplicationsWithRequestBuilder(userId: Int) -> RequestBuilder<ApplicationList> {
        var path = "/v1/user/{user_id}/developer_applications"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
        ])

        let requestBuilder: RequestBuilder<ApplicationList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Regenerate Client Application Secret
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter clientId: (path) The ID of the client application of interest. This value was given as a response during client application creation. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func regenerateClientApplicationSecret(userId: Int, clientId: String, completion: @escaping ((_ data: ApplicationSecret?,_ error: Error?) -> Void)) {
        regenerateClientApplicationSecretWithRequestBuilder(userId: userId, clientId: clientId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Regenerate Client Application Secret
     - PUT /v1/user/{user_id}/developer_applications/{client_id}/secret
     - This endpoint forces the regeneration of a client application secret for use in 3-legged OAuth2 authorization.
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "clientId" : "clientId",
  "client_secret" : "client_secret"
}}]
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter clientId: (path) The ID of the client application of interest. This value was given as a response during client application creation. 

     - returns: RequestBuilder<ApplicationSecret> 
     */
    open class func regenerateClientApplicationSecretWithRequestBuilder(userId: Int, clientId: String) -> RequestBuilder<ApplicationSecret> {
        var path = "/v1/user/{user_id}/developer_applications/{client_id}/secret"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let clientIdPreEscape = "\(clientId)"
        let clientIdPostEscape = clientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{client_id}", with: clientIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
        ])

        let requestBuilder: RequestBuilder<ApplicationSecret>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update Client Application
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter clientId: (path) The ID of the client application of interest. This value was given as a response during client application creation. 
     - parameter application: (body) The information about the new client application. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateClientApplication(userId: Int, clientId: String, application: Application, completion: @escaping ((_ data: Application?,_ error: Error?) -> Void)) {
        updateClientApplicationWithRequestBuilder(userId: userId, clientId: clientId, application: application).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update Client Application
     - PUT /v1/user/{user_id}/developer_applications/{client_id}
     - This endpoint updates a client application for use in 3-legged OAuth2 authorization.
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "clientId" : "clientId",
  "appName" : "appName",
  "description" : "description",
  "appLogoUrl" : "appLogoUrl",
  "clientSecret" : "clientSecret",
  "redirectUrls" : [ "redirectUrls", "redirectUrls" ]
}}]
     
     - parameter userId: (path) The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint. 
     - parameter clientId: (path) The ID of the client application of interest. This value was given as a response during client application creation. 
     - parameter application: (body) The information about the new client application. 

     - returns: RequestBuilder<Application> 
     */
    open class func updateClientApplicationWithRequestBuilder(userId: Int, clientId: String, application: Application) -> RequestBuilder<Application> {
        var path = "/v1/user/{user_id}/developer_applications/{client_id}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{user_id}", with: userIdPostEscape, options: .literal, range: nil)
        let clientIdPreEscape = "\(clientId)"
        let clientIdPostEscape = clientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{client_id}", with: clientIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: application)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
        ])

        let requestBuilder: RequestBuilder<Application>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
